@model HotelMangementSystem.ViewModel.RoomViewModel

@{
    ViewBag.Title = "Index";
}
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<link href="~/Content/modal.css" rel="stylesheet" />
<script type="text/javascript">
    $(document).ready(function () {
        LoadRoomDetails();
        $("#txtRoomId").val("0");
        $("#btnSave").click(function () {
            if (!$("#formRoom").valid()) {
                return;
            }
            SaveRoomData();
        });
    });
    function DeleteRoom(roomId) {
        var result = confirm("Silmek istedeğine emin misin?");
        if (result === false) {
            return false;
        }
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'JSON',
            contentType: 'application/json;charset=utf-8',
            data: { roomId: roomId },
            url: '/Room/DeleteRoomDetails',
            success: function (data) {
                if (data.success == true) {
                    alert(data.message);
                    LoadRoomDetails();
                }

            },
            error: function () {
                alert('There is soem problem to process your request.Please try after sometime.');
            }
        });
    }
    function EditRoom(roomId) {
  
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'JSON',
            contentType: 'application/json;charset=utf-8',
            data: { roomId: roomId },
            url: '/Room/EditRoomDetails',
            success: function (data) {
                console.log(data);
                $("#txtRoomNumber").val(data.RoomNumber);
                $("#txtRoomPrice").val(data.RoomPrice);
                $("#ddBookingStatus").val(data.BookingStatusId);
                $("#ddRoomType").val(data.RoomTypeId);
                $("#txtRoomCapacity").val(data.RoomCapacity);
                $("#txtRoomDescription").val(data.RoomDescription);
                
                $("#imgRoom").attr('src', "../RoomImages/"+ data.RoomImage);
                $("#divAddRoom").modal({ show: true });
                $("#txtRoomId").val(data.RoomId);
                $("#btnSave").text("Update");

            },
            error: function () {
                alert('There is soem problem to process your request.Please try after sometimes.');
            }
        });
    }
    function LoadRoomDetails() {
        //$("#divLoadRoomDetails")
        var url = '/Room/GetAllRooms'
        $.ajax({
            async: true,
            data: 'Get',
            dataType: 'HTML',
            contentType: false,
            processData: false,
            url: url,
            success: function (data) {
                $("#divLoadRoomDetails").html(data);
            },
            error: function () {
                alert('There is soem problem to process your request.Please try after sometimes.');
            }
        });
     
        
    }   
    function SaveRoomData() {
        var formData = new FormData;
        formData.append("RoomId", $("#txtRoomId").val());
        formData.append("RoomNumber", $("#txtRoomNumber").val());
        formData.append("RoomPrice", $("#txtRoomPrice").val());
        formData.append("BookingStatusId", $("#ddBookingStatus").val());
        formData.append("RoomTypeId", $("#ddRoomType").val());
        formData.append("RoomCapacity", $("#txtRoomCapacity").val());
        formData.append("RoomDescription", $("#txtRoomDescription").val());
        formData.append("Image", $("#UploudImage").get(0).files[0]);
        $.ajax({
            async: true,
            type: 'POST',
            contentType: false,
            processData: false,
            data: formData,
            success: function (data) {
                if (data.success === true) {
                    alert(data.message);
                    ResetRoomInformation();
                    LoadRoomDetails()
                }

            },
            error: function () {
                alert('There is soem problem to process your request.');
            }
        })

    }
    function ResetRoomInformation() {
        $("#txtRoomNumber").val('');
        $("#txtRoomPrice").val('');
        $("#ddBookingStatus").val(1);
        $("#ddRoomType").val(1);
        $("#txtRoomCapacity").val('');
        $("#txtRoomDescription").val('');
        $("#UploudImage").val('');
        $("#imgRoom").removeAttr('src');
        $("#txtRoomId").val(0);
        $("#btnSave").val("Save");


    }
    function DisplayImage(result) {
        if (result.files && result.files[0]) {
            var filereader = new FileReader;
            filereader.onload = function (e) {
                $("#imgRoom").attr('src', e.target.result);
            }
            filereader.readAsDataURL(result.files[0]);
        }

    }
</script>


<div style="margin-top:20px">
    <button type="button" class="btn btn-secondary btn-lg" data-toggle="modal" data-target="#divAddRoom" data-backdrop="static " data-keyboard="false" onclick=" ResetRoomInformation()">Oda Ekle</button>

</div>

<div id="divAddRoom" class="modal fade" role="dialog">
    
    <div class="modal-dialog">
        <div class=" modal-content">

            <div class="modal-header">
                <h4 class="modal-title">Oda</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>


            </div>
            <div class="modal-body">
                <form id="formRoom">
                    <div class="container col-md-12">
                        @Html.HiddenFor(expression: model => model.RoomId, htmlAttributes: new { id = "txtRoomId" })
                        <div class="form-group col-md-6">
                            @Html.LabelFor(expression: model => model.RoomNumber)
                            @Html.TextBoxFor(model => model.RoomNumber, htmlAttributes: new { @class = "form-control", id = "txtRoomNumber" })
                            @Html.ValidationMessageFor(expression: model => model.RoomNumber, validationMessage: null, htmlAttributes: new { @class = "text-danger" })

                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(expression: model => model.RoomPrice)
                            @Html.TextBoxFor(expression: model => model.RoomPrice, htmlAttributes: new { @class = "form-control", id = "txtRoomPrice" })
                            @Html.ValidationMessageFor(expression: model => model.RoomPrice, validationMessage: null, htmlAttributes: new { @class = "text-danger" })

                        </div>


                        <div class="form-group col-md-6">
                            @Html.LabelFor(expression: model => model.BookingStatusId)
                            @Html.DropDownList("listOfBookingStatus", null, new { @class = "form-control", id = "ddBookingStatus" })
                            @Html.ValidationMessageFor(expression: model => model.BookingStatusId, validationMessage: null, htmlAttributes: new { @class = "text-danger" })

                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(expression: model => model.RoomTypeId)
                            @Html.DropDownList("listOfRoomType", null, new { @class = "form-control", id = "ddRoomType" })
                            @Html.ValidationMessageFor(expression: model => model.RoomTypeId, validationMessage: null, htmlAttributes: new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(expression: model => model.RoomCapacity)
                            @Html.TextBoxFor(expression: model => model.RoomCapacity, htmlAttributes: new { @class = "form-control", id = "txtRoomCapacity" })
                            @Html.ValidationMessageFor(expression: model => model.RoomCapacity, validationMessage: null, htmlAttributes: new { @class = "text-danger" })

                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(expression: model => model.RoomDescription)
                            @Html.TextBoxFor(expression: model => model.RoomDescription, htmlAttributes: new { @class = "form-control", id = "txtRoomDescription" })
                            @Html.ValidationMessageFor(expression: model => model.RoomDescription, validationMessage: null, htmlAttributes: new { @class = "text-danger" })

                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(expression: model => model.RoomImage)
                            <input id="UploudImage" type="file" class="form-control" name="roomImage" title="Load Image" onchange="DisplayImage(this)" />
                            <img id="imgRoom" height="200" width="200" style="border:solid" />

                        </div>

                    </div>




                </form>
            </div>
            <div class="modal-footer">
                <button id="btnSave" type="button" class="btn btn-success">Kaydet</button> &nbsp;
                <button type="button" data-dismiss="modal" class="btn btn-danger">Kapat</button>

            </div>
        </div>
    </div>


</div>

<div style="margin-top:10px"></div>
<div id="divLoadRoomDetails"></div>